server.port=${PORT:8080}
logging.level.org.atmosphere=warn

# Launch the default browser when starting the application in development mode
vaadin.launch-browser=true
# To improve the performance during development.
# For more information https://vaadin.com/docs/latest/flow/integrations/spring/configuration#special-configuration-parameters
vaadin.allowed-packages=com.vaadin,org.vaadin,com.myproject

# Open-in-view is only needed if you use lazy-loaded entities in your Flow views.
spring.jpa.open-in-view=false

# Initialize the JPA Entity Manager before considering data.sql so that the EM can create the schema and data.sql contain data
spring.jpa.defer-datasource-initialization = true


# Enable H2 Database Console (for browser access)
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console

# Database URL, username, and password
#spring.datasource.url=jdbc:postgresql://ep-ancient-brook-a9tp6vew-pooler.gwc.azure.neon.tech/Attendify_DB?sslmode=require
#spring.datasource.driverClassName=org.postgresql.Driver
#spring.datasource.username=Attendify_DB_owner
#spring.datasource.password=npg_rGsQkqwEj3I0

# Database URL, username, and password
spring.datasource.url=jdbc:mysql://srv1319.hstgr.io:3306/u428388148_attendify_db?useSSL=false&serverTimezone=UTC
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.username=u428388148_attendif_owner
spring.datasource.password=zNVZfwdL1:

# Hibernate Dialect for H2
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

# Enable Hibernate DDL auto
spring.jpa.hibernate.ddl-auto=update

# Show SQL Queries (optional, for debugging)
spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true 

vaadin.servlet.session-timeout=60m
vaadin.heartbeat-interval=300

vaadin.productionMode=true


# HikariCP tuning adjust max-lifetime according to your MySQL wait_timeout (e.g. 1 hour)
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
# 15 minutes
spring.datasource.hikari.max-lifetime=900000
# 10 minutes
spring.datasource.hikari.idle-timeout=600000
# 30 seconds to get a connection from pool
spring.datasource.hikari.connection-timeout=30000
# 5 seconds validation timeout
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.connection-test-query=SELECT 1
